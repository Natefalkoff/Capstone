@model Capstone.Web.Models.UserModel

@{
    ViewBag.Title = "ChangePassword";
}


@using (Html.BeginForm("ChangePassword", "User", FormMethod.Post))
{
    
    <h2>ChangePassword</h2>
    <br>
    <div class="body">

    </div>
   <br>
<div class="body">
    @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "New Password" })
    @Html.ValidationMessageFor(m => m.Password)
</div>
<br>


<div class="body">
    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = "Confirm Password" })
    @Html.ValidationMessageFor(m => m.ConfirmPassword)
</div>
<br>

<div class="body">
    <button>Change</button>
</div>

}

@using (Html.BeginForm("ChangePassword", "User", FormMethod.Post))
{
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="container">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h2>ChangePassword</h2>
            </div>
            <div class="panel-body">
                <div class="col-md-4"></div>
                <div class="col-md-4">
                    @Html.PasswordFor(m => m.TempPassword, new { @class = "form-control", placeholder = "Old Password" })
                    @Html.ValidationMessageFor(m => m.TempPassword,"")

                    @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "New Password" })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = "Confirm Password" })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })

                    <button class="btn btn-danger">Change</button>
                </div>
            </div>
        </div>
    </div>
}