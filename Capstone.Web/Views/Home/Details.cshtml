@model Capstone.Web.Models.RecipeModel

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>


@using (Html.BeginForm("Details", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <input type="button" class="btn btn-outline-dark" name="btnprint" value="Print" onclick="PrintMe('printableArea')" />
    <div id="printableArea">

        @*<script language="javascript">
            @media print{
            var css = '@page { size: landscape; }',
            head = document.head || document.getElementsByTagName('head')[0],
            style = document.createElement('style');

            style.type = 'text/css';
            style.media = 'print';

            if (style.styleSheet){
            style.styleSheet.cssText = css;
            } else {
            style.appendChild(document.createTextNode(css));
            }

            head.appendChild(style);

            window.print();
            }
        </script>*@
        <script language="javascript">
            function PrintMe(DivID) {
                var disp_setting = "toolbar=yes,location=no,";
                disp_setting += "directories=yes,menubar=yes,";
                disp_setting += "scrollbars=yes,width=650, height=600, left=100, top=25";
                var content_vlue = document.getElementById(DivID).innerHTML;
                var docprint = window.open("", "", disp_setting);
                docprint.document.open();
                docprint.document.write('<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"');
                docprint.document.write('"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">');
                docprint.document.write('<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">');
                docprint.document.write('<head><title>My Title</title>');
                docprint.document.write('<style type="text/css">body{margin:0px;');
                docprint.document.write('font-family:verdana,Arial;color:#000;');
                docprint.document.write('font-family:Verdana, Geneva, sans-serif; font-size:12px;}');
                docprint.document.write('a{color:#000;text-decoration:none;} </style>');
                docprint.document.write('</head><body onLoad="self.print()"><center>');
                docprint.document.write(content_vlue);
                docprint.document.write('</center></body></html>');
                docprint.document.close();
                docprint.focus();
            }
        </script>

        <h4>@Model.Name</h4>
        <hr />
        <dl class="dl-horizontal">
            

                @Html.HiddenFor(model => model.RecipeID)
                @Html.HiddenFor(model => model.Name)
            <dt>
                @Html.DisplayNameFor(model => model.Directions)
                @Html.HiddenFor(model => model.Directions)
            </dt>

            <dd>
                @Html.Raw(Model.Directions.Replace(Environment.NewLine, "<br/> <hr />"))
            </dd>


            <dd>
                @Html.HiddenFor(model => model.UserID)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Ingredients)
                @Html.HiddenFor(model => model.Ingredients)
            </dt>

            <dd>
                @Html.Raw(Model.Ingredients.Replace(Environment.NewLine, "<br/> <hr/>"))
            </dd>

            <dd>
                <img src="~/Img/@Model.ImageName" />
                @Html.HiddenFor(model => model.ImageName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Tags)
                @Html.HiddenFor(model => model.TagsList)
            </dt>


            @{

                foreach (string s in Model.TagsList)
                {
                    <dd>
                        @s
                    </dd>
                }
            }


            <dt>
                @Html.DisplayNameFor(model => model.Categories)
                @Html.HiddenFor(model => model.Categories)
            </dt>
            @{
                foreach (string s in Model.Categories)
                {
                    <dd>
                        @s
                    </dd>
                }
            }


            <dt>

                @Html.HiddenFor(model => model.Publics)
            </dt>


        </dl>
    </div>

    <div>
        @using Capstone.Web.DAL @if (Authorize.Admin((int?)Session["authorizationlevel"]) == true)
                {

            <p>If Admin Would Like To Add Tags separated by semicolon (;)</p>
                @Html.TextBoxFor(model => model.Tags)
                <button class="btn btn-outline-dark"> Submit </button>
        }
    </div>
        @*<p>
                @Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |
                @Html.ActionLink("Back to List", "Index")
            </p>*@
                }

