@model Capstone.Web.Models.RecipeModel

@{
    ViewBag.Title = "Details";
}

<script src="https://unpkg.com/masonry-layout@4/dist/masonry.pkgd.min.js"></script>

<script type="text/javascript" src="~/Content/masonry.pkgd.min.js"></script>
<script type="text/javascript" src="~/Content/masonry-docs.min.js"></script>
<script type="text/javascript" src="~/Content/jquery.js"></script>


<script src="~/Content/jquery.min.js"></script>
<script src="~/Content/bootstrap.min.js"></script>
<script>
    $(document).ready(function () {
        $('.panel-heading').each(function () {
            var hue = 'rgb(' + (Math.floor((256 - 199) * Math.random()) + 200) + ',' + (Math.floor((256 - 199) * Math.random()) + 200) + ',' + (Math.floor((256 - 199) * Math.random()) + 200) + ')';
            $(this).css("background-color", hue);
        });
    });
</script>

<h2>Details</h2>


@using (Html.BeginForm("Details", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <input type="button" class="btn btn-outline-dark" name="btnprint" value="Print" onclick="PrintMe('printableArea')" />
    

        <script language="javascript">
            function PrintMe(DivID) {
                var disp_setting = "toolbar=yes,location=no,";
                disp_setting += "directories=yes,menubar=yes,";
                disp_setting += "scrollbars=yes,width=650, height=600, left=100, top=25";
                var content_vlue = document.getElementById(DivID).innerHTML;
                var docprint = window.open("", "", disp_setting);
                docprint.document.open();
                docprint.document.write('<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"');
                docprint.document.write('"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">');
                docprint.document.write('<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">');
                docprint.document.write('<head><title>My Title</title>');
                docprint.document.write('<style type="text/css">body{margin:0px;');
                docprint.document.write('font-family:verdana,Arial;color:#000;');
                docprint.document.write('font-family:Verdana, Geneva, sans-serif; font-size:12px;}');
                docprint.document.write('a{color:#000;text-decoration:none;} </style>');
                docprint.document.write('</head><body onLoad="self.print()"><center>');
                docprint.document.write(content_vlue);
                docprint.document.write('</center></body></html>');
                docprint.document.close();
                docprint.focus();
            }
        </script>

   
        <div id="printableArea" class="container-fluid">
            <div style="padding-bottom:30px" class="panel panel-default">
                <div style="font-weight:bold" class="panel-heading"><h2>@Model.Name</h2></div>
                
                <div class="col-md-4 print">
                    <h4 style="font-weight:bold">Directions</h4><hr />
                    @Html.Raw(Model.Directions.Replace(Environment.NewLine, "<br/> <hr />"))
                    @Html.HiddenFor(model => model.Directions)
                    @Html.HiddenFor(model => model.RecipeID)
                </div>
                
                <div class="col-md-4 print">
                    <h4 style="font-weight:bold">Ingredients</h4><hr />
                    @Html.Raw(Model.Ingredients.Replace(Environment.NewLine, "<br/> <hr />"))
                    @Html.HiddenFor(model => model.Ingredients)
                </div>
                <div id="notToBePrinted" class="col-md-4">
                    <img style="width:100%; height:auto" src="~/Img/@Model.ImageName" />
                    @Html.HiddenFor(model => model.ImageName)
                    <div class="col-md-1">
                        <p style="font-weight:bold;border-bottom: 1px solid black">Tags</p>
                        @foreach(string tag in Model.TagsList)
                        {
                            <p style="border-bottom: 1px solid black">@tag</p>
                            
                        }
                    </div>
                    <div class="col-md-2"></div>
                    <div class="col-md-1">
                        <p style="font-weight:bold;border-bottom: 1px solid black">Categories</p>
                        @foreach(string cat in Model.Categories)
                        {
                            <p style="border-bottom: 1px solid black">@cat</p>
                            
                        }
                    </div>
                </div>
            </div>
        </div>


    



    <div>
        @using Capstone.Web.DAL @if (Authorize.Admin((int?)Session["authorizationlevel"]) == true)
                {

            <p>If Admin Would Like To Add Tags separated by semicolon (;)</p>
                @Html.TextBoxFor(model => model.Tags, new { @class = "form-control" })
                <button class="btn btn-outline-dark"> Submit </button>
        }
    </div>
        @*<p>
                @Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |
                @Html.ActionLink("Back to List", "Index")
            </p>*@
                }

